---
layout: guide
title: Search API - Facets
cat: guide
sidebar: reference_api_search_facets
---

The usual purpose of a full-text search engine is to return a small number of documents matching your query.

_Facets_ provide aggregated data based on a search query. In the simple case, a facet can return _facet counts_ for various _facet values_ for a specific _field_. ElasticSearch supports more advanced facet implementations, such as "statistical":/guide/reference/api/search/facets/statistical-facet.html or "date histogram":/guide/reference/api/search/facets/date-histogram-facet.html facets.

The field used for facet calculations must be of type numeric, date/time or analyzed as a single token. You can give the facet an arbitrary _name_ and return multiple facets in one request.

For example, let's suppose you have a number of articles with a field called @tags@. Facet can return counts for the most popular tags across the documents matching your query — or across all documents in the index.

Let's check out this simple example. We will store some example data first:

<pre class="prettyprint lang-bash">
curl -X DELETE "http://localhost:9200/articles"
curl -X POST "http://localhost:9200/articles/article" -d '{"title" : "One",   "tags" : ["foo"]}'
curl -X POST "http://localhost:9200/articles/article" -d '{"title" : "Two",   "tags" : ["foo", "bar"]}'
curl -X POST "http://localhost:9200/articles/article" -d '{"title" : "Three", "tags" : ["foo", "bar", "baz"]}'
</pre>

Now, let's query the index for articles beginning with letter “T” and retrieve a "_terms facet_":/guide/reference/api/search/facets/terms-facet.html for the @tags@ field:

<pre class="prettyprint lang-bash">
curl -X POST "http://localhost:9200/articles/_search?pretty=true" -d '
  {
    "query" : { "query_string" : {"query" : "T*"} },
    "facets" : {
      "tags" : { "terms" : {"field" : "tags"} }
    }
  }
'
</pre>

This request will return articles “Two” and “Three”, as well as the @tags@ facet:

<pre class="prettyprint lang-js">
"facets" : {
  "tags" : {
    "_type" : "terms",
    "missing" : 0,
    "terms" : [ {
      "term" : "foo",
      "count" : 2
    }, {
      "term" : "bar",
      "count" : 2
    }, {
      "term" : "baz",
      "count" : 1
    } ]
  }
}
</pre>

Notice that the counts are scoped for this query: _foo_ and _bar_ are counted twice, _baz_ is counted once. (This is because the primary purpose of facets is to enable "_faceted browsing_":http://en.wikipedia.org/wiki/Faceted_search, allowing the user to refine her query based on the insight from the facet: restrict the search to a specific category, price or date range, etc., most probably with a "_filter_":/guide/reference/api/search/filter.html based on selected facet.)

h2. Scope

Facets are bound to the current query by default, called @main@. Every facet can be set with the @global@ scope, in which case it will return facet calculations for all documents in the index.

A shorthand to set a facet to run globally is to set the @global@ parameter to @true@:

<pre class="prettyprint lang-js">
{>
    "facets" : {
        "<FACET NAME>" : {
            "<FACET TYPE>" : { ... },
            "global" : true
        }
    }
}    
</pre>

Custom scope names works in conjunction with child queries or filters, allowing to force the facets to run on the child documents matching the child specific query.

h2. Filter

All facets can be configured with an additional filter (explained in the "Query DSL":/guide/reference/query-dsl section), which will further reduce the documents they execute on. For example:

<pre class="prettyprint lang-js">
{
    "facets" : {
        "<FACET NAME>" : {
            "<FACET TYPE>" : {
                ...
            },
            "facet_filter" : {
                "term" : { "user" : "kimchy"}
            }
        }
    }
}    
</pre>

h2. Formal Description

|_. Node | @facets@ |
|_. Description | Holds a list of _facet_ definition. Each facet definition node has a unique name that is returned in the query result. |

|_. Child |_. Description |_. Type |_. Required (cardinality) |
| @<facet-name>@ (name varies) | A facet to define. | @<facet-name>@ | Yes (1..n) |

|_. Node | @<facet-name>@ |
|_. Description | A _facet_ definition. |

|_. Child |_. Description |_. Type |_. Required (cardinality) |
| @<facet-type>@ (name varies) | The facet type to define | One of: "@terms@":/guide/reference/search/facets/terms-facet.html "@range@":/guide/reference/search/facets/range-facet.html "@histogram@":/guide/reference/search/facets/histogram-facet.html "@date-histogram@":/guide/reference/search/facets/date-histogram-facet.html "@filter@":/guide/reference/search/facets/filter-facet.html "@query@":/guide/reference/search/facets/query-facet.html "@statistical@":/guide/reference/search/facets/statistical-facet.html "@terms-stats@":/guide/reference/search/facets/terms-facet.html "@geo-distance-facet@":/guide/reference/search/facets/geo-distance-facet.html| Yes (1) |
| @facet_filter@ | A "@filter@":/guide/reference/search/filter.html to apply to the faceted documents | Any "@filter@":/guide/reference/search/filter.html | No (0..1) |
| @global@ | Set to @true@ to run facet on all documents in the index (as opposed to only the ones from the query result) | _boolean_ | No. Default is @false@  (0..1) |

h2. Examples

A @terms@ facet (named "Manufacturer") and a @range@ facet (named "Price") applied on the query result

<pre class="prettyprint lang-js">
"facets" : {
  "Manufacturer" : {
    "terms": {
      "field" : "manufacturer"
    }
  },
  "Price" : {
    "range" : {
      "field": "price",
      "ranges" : [
        { "to" : 50 },
        { "from" : 50, "to" : 100 },
        { "from" : 100, "to" : 150 },
        { "from" : 150 }
      ]
    }
  }
}
</pre>

A facet applied on all documents instead of on the query result only:

<pre class="prettyprint lang-js">
{
  "query" : {
    "term": {
      "manufacturer": "Acme"
    }
  },
  "facets" : {
    "Department" : {
      "terms" : {
        "field" : "department"
      },
      "global": true
    }
  }
}
</pre>

A facet applied on documents that match the filter

<pre class="prettyprint lang-js">
{
  "query" : {
    "term": {
      "manufacturer": "Acme"
    }
  },
  "facets" : {
    "Category" : {
      "terms" : {
        "field" : "category"
      },
      "facet_filter": {
        "range" : {
          "price": {
            "to" : 100
          }
        }
      }
    }
  }
}
</pre>